package com.daoshan.school.demo.java_23_design_mode.structure_modes.adapter_mode.main;

/**
 * 适配器模式（解决接口与目标类不匹配问题）
 *
 *
 * 1、类适配器模式
 * 　　在上图中可以看出，Adaptee类并没有sampleOperation2()方法，而客户端则期待这个方法。为使客户端能够使用Adaptee类，提供一个中间环节，即类Adapter，把Adaptee的API与Target类的API衔接起来。Adapter与Adaptee是继承关系，这决定了这个适配器模式是类的：
 *
 *　模式所涉及的角色有：
 *
 *　　●　　目标(Target)角色：这就是所期待得到的接口。注意：由于这里讨论的是类适配器模式，因此目标不可以是类。
 *
 *　  ●　　源(Adapee)角色：现在需要适配的接口。
 *
 *　　●　　适配器(Adaper)角色：适配器类是本模式的核心。适配器把源接口转换成目标接口。显然，这一角色不可以是接口，而必须是具体类。
 *
 *
 *
 * 2、对象适配器模式
 *
 * 　与类的适配器模式一样，对象的适配器模式把被适配的类的API转换成为目标类的API，与类的适配器模式不同的是，对象的适配器模式不是使用继承关系连接到Adaptee类，而是使用委派关系连接到Adaptee类。
 *
 * 适配器模式把一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口不匹配而无法在一起工作的两个类能够在一起工作。
 *
 *　用电器做例子，笔记本电脑的插头一般都是三相的，即除了阳极、阴极外，还有一个地极。
 * 而有些地方的电源插座却只有两极，没有地极。电源插座与笔记本电脑的电源插头不匹配使得笔记本电脑无法使用。
 * 这时候一个三相到两相的转换器（适配器）就能解决此问题，而这正像是本模式所做的事情。
 *
 *
 *
 *
 *
 *
 *
 */
public class Main {
}
